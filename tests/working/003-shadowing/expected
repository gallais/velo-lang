Running Test
# Finished Parsing
# Finished Type Checking
a : Nat -> Nat
----------
?hole : Nat

# Finished Executing
```
let m = (inc (inc zero))
in let b = true
   in let x = false
      in let n = (inc zero)
         in let f = (fun p : Nat => p)
            in (?hole : Nat)
```
### Reduce Application
```
let b = true
in let x = false
   in let m = (inc zero)
      in let f = (fun n : Nat => n)
         in (?hole : Nat)
```
### Reduce Application
```
let b = false
in let m = (inc zero)
   in let f = (fun n : Nat => n)
      in (?hole : Nat)
```
### Reduce Application
```
let m = (inc zero)
in let f = (fun n : Nat => n)
   in (?hole : Nat)
```
### Reduce Application
```
let f = (fun m : Nat => m)
in (?hole : Nat)
```
### Reduce Application
```
(?hole : Nat)
```
# Finished
